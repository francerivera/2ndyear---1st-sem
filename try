import random

pokemon_dict = {
    "PIKACHU": ("ELECTRIC", 50),
    "CHARMANDER": ("FIRE", 55),
    "BULBASAUR": ("GRASS", 60),
    "SQUIRTLE": ("WATER", 58),
    "JIGGLYPUFF": ("FAIRY", 45),
    "EEVEE": ("NORMAL", 52),
    "SNORLAX": ("NORMAL", 80),
    "GENGAR": ("POISON", 70),
    "MACHAMP": ("FIGHTING", 75),
    "MEWTWO": ("PSYCHIC", 90),
    "DIGLETT": ("GROUND", 55),
    "MAGNEMITE": ("STEEL", 35),
    "ONIX": ("ROCK", 45),
    "GIRATINA": ("GHOST", 90),
    "ARCANINE": ("FIRE", 45),
}

print("Welcome to my Pokemon Game!")
print("a.) Play\nb.) Tutorial")
user_input = input("Enter the key: ").lower()

if user_input == "a":
    print("┌" + "─" * 14 + "┬" + "─" * 12 + "┬" + "─" * 11 + "┐")
    print("│ Pokemons     │ Types      │ Base Power│")
    print("├" + "─" * 14 + "┼" + "─" * 12 + "┼" + "─" * 11 + "┤")

    for pokemon, (element, power) in sorted(pokemon_dict.items()):
        print(f"│ {pokemon:12} │ {element:10} │ {power:3}       │")

    print("└" + "─" * 14 + "┴" + "─" * 12 + "┴" + "─" * 11 + "┘")
elif user_input == "b":
    print("""To start playing this game:\n
1. Choose your starter Pokemon from the available options. Each with unique types.\n
2. Pay attention to type advantages, such as Water being strong against Fire.
3. If you have a strong element versus your opponent, you will have an additional power. If you are have a weak element versus yout opponent, the additional power will be given to the opponent. If they are the same element, it can be a tie.
4. Your opponent will be random so it is all luck. Good luck!
5. There are keys to help you navigate inside the game. Enter the keys that you want.
6. "Gotta catch 'em all!""")
else:
    print("Invalid input. Please enter 'a' to play or 'b' for the tutorial.")


elements_interact = [
    [["GRASS", "STEEL"], ["WATER", "ROCK", "FIRE"]], # FIRE
    [["WATER"], ["GROUND"]],  # ELECTRIC
    [["WATER", "GROUND", "ROCK"], ["FIRE", "POISON"]],  # GRASS
    [["FIRE", "GROUND", "ROCK"], ["ELECTRIC", "GRASS"]],  # WATER
    [["FIGHTING", "POISON"], ["GHOST"]],  # PSYCHIC
    [["NORMAL", "ROCK", "STEEL"], ["PSYCHIC", "FAIRY"]],  # FIGHTING
    [["FIRE", "ELECTRIC", "POISON", "ROCK", "STEEL"], ["WATER", "GRASS"]],  # GROUND
    [["FIRE"], ["WATER", "GRASS", "FIGHTING", "GROUND", "STEEL"]],  # ROCK
    [["PSYCHIC", "GHOST"], ["GHOST", "DARK"]],  # GHOST
    [["ICE", "ROCK", "FAIRY"], ["FIRE", "FIGHTING", "GROUND"]],  # STEEL
    [["FIGHTING", "DRAGON", "DARK"], ["POISON", "STEEL"]]  # FAIRY
]

# Mapping element names to their indices
element_indices = {
    "FIRE": 0,
    "ELECTRIC": 1,
    "GRASS": 2,
    "WATER": 3,
    "PSYCHIC": 4,
    "FIGHTING": 5,
    "GROUND": 6,
    "ROCK": 7,
    "GHOST": 8,
    "STEEL": 9,
    "FAIRY": 10,
    "NORMAL": 11
}

match_history = []
match_number = 1

while True:
    pokemon_input = str(input("Please select a type of Pokemon: ")).upper()

    if pokemon_input in pokemon_dict:
        computer_choice = random.choice(list(pokemon_dict.keys()))

        def assign_elements(player_pokemon, computer_pokemon):
            global match_number
            player_element, player_power = pokemon_dict[player_pokemon]
            computer_element, computer_power = pokemon_dict[computer_pokemon]

            print(f"Player's Pokémon Element: {player_element}, Power: {player_power}")
            print(f"Computer's Pokémon Element: {computer_element}, Power: {computer_power}")

            if player_element == computer_element:
                random_number = random.randint(1, 10)
                damage = player_power + random_number
                damage2 = computer_power + random_number
                print(f"Both Pokémon have the same element!\nYour Pokémon gained a random additional power: {damage}\nComputer's Pokémon gained a random additional power: {damage2}")
            elif computer_element in elements_interact[element_indices[player_element]][0]:
                damage = player_power * 2
                damage2 = computer_power
                print(f"{player_element} is strong against {computer_element}! Damage is 2x: {damage}")
            elif computer_element in elements_interact[element_indices[player_element]][1]:
                damage = player_power * 0.5
                damage2 = computer_power
                print(f"{player_element} is weak against {computer_element}! Damage is 1/2: {damage}")
            else:
                damage = player_power
                damage2 = computer_power
                print(f"{player_element} has no special effect on {computer_element}. Damage is: {damage}")

            if damage > damage2:
                print(f"Player wins! Your Pokémon will absorb Computer's Pokémon power. New Power: {damage + damage2}")
                after_battle_player_power = damage + damage2
                after_battle_computer_power = 0
                match_result = "Player wins"
            elif damage < damage2:
                print(f"Computer wins! Computer's Pokémon will absorb your Pokémon's power. New Power: {damage2 + damage}")
                after_battle_player_power = 0
                after_battle_computer_power = damage2 + damage
                match_result = "Computer wins"
            else:
                print("It's a tie!")
                after_battle_player_power = player_power
                after_battle_computer_power = computer_power
                match_result = "Tie"

            # Add match result to history
            match_history.append({
                "Match Number": match_number,
                "Player Pokémon": player_pokemon,
                "Player Power (before)": player_power,
                "Player Additional Damage": damage - player_power,
                "Player Total Damage": damage,
                "Computer Pokémon": computer_pokemon,
                "Computer Power (before)": computer_power,
                "Computer Additional Damage": damage2 - computer_power,
                "Computer Total Damage": damage2,
                "Match Result": match_result,
                "Player Power (after)": after_battle_player_power,
                "Computer Power (after)": after_battle_computer_power
            })

            match_number += 1
            return match_result

        match_result = assign_elements(pokemon_input, computer_choice)
    else:
        print("Invalid Pokémon selected. Please try again.")

    saved_progress = {
        "player_pokemon": None,
        "player_power": 0
    }


    player_progress = 0

    while True:
        print("\nDo you want to continue fighting enemies?")
        print("Enter the key from the choices:\n'n' : New Pokémon\n'r' : Restart\n'm' : Match History\n't' : Main Menu\n'x' : Exit")
        if match_result == "Player wins":
            print("\n'c' : Continue")
        user_select = input("Enter the key: ")

        if user_select.lower() == 'm':
            for match in match_history:
                print("\nMatch Number:", match["Match Number"])
                print("Player Pokémon:", match["Player Pokémon"])
                print("Player Power (before):", match["Player Power (before)"])
                print("Player Additional Damage:", match["Player Additional Damage"])
                print("Player Total Damage:", match["Player Total Damage"])
                print("Computer Pokémon:", match["Computer Pokémon"])
                print("Computer Power (before):", match["Computer Power (before)"])
                print("Computer Additional Damage:", match["Computer Additional Damage"])
                print("Computer Total Damage:", match["Computer Total Damage"])
                print("Match Result:", match["Match Result"])
                print("Player Power (after):", match["Player Power (after)"])
                print("Computer Power (after):", match["Computer Power (after)"])
            input("Enter any key to go back: ")
            continue

        elif user_select.lower() == "c":
            if match_result == "Player wins":
                computer_choice = random.choice(list(pokemon_dict.keys()))
                print(f"Continuing with {player_pokemon} with Power: {player_power}")
                break
            else:
                print("Invalid Input")
                continue

        elif user_select.lower() == "n":
            player_pokemon = ""
            player_power = 0
            break

        elif user_select.lower() == "x":
            while True:
                print("Do you want to quit? All progress will be lost")
                print("'e' : No, I changed my mind\n'y' : Yes")
                exit_input = input("Enter the key: ")
                if exit_input.lower() == 'y':
                    print("Thank you for playing!")
                    quit()
                elif exit_input.lower() == 'e':
                    break
                else:
                    print("Invalid Input")
                    continue

        elif user_select.lower() == 'r':
            while True:
                print("Do you want to restart? It will reset both the user's and computer's Pokémon and base power")
                print("'e' : No, I changed my mind\n'y' : Yes")
                change_choice = input("Enter the key: ")
                if change_choice.lower() == 'e':
                    break
                elif change_choice.lower() == 'y':
                    computer_choice = ""
                    player_pokemon = ""
                    player_power = 0  # Reset player's power
                    break
            break

        elif user_select.lower() == 't':
            while True:
                print("Both the user's and the computer's Pokémon and base power will reset once you go back to the main menu")
                print("'e' : No, I changed my mind\n'y' : Yes")
                menu_select = input("Enter the key: ")
                if menu_select.lower() == 'e':
                    break
                elif menu_select.lower() == 'y':
                    computer_pokemon = ""
                    computer_pokemon_power = 0
                    player_pokemon = ""
                    player_power = 0

                    # Return to main menu
                    print("Welcome to my Pokemon Game!")
                    print("a.) Play\nb.) Tutorial")
                    user_input = input("Enter the key: ").lower()
                    break
            break
        else:
            print("Invalid input")
            continue
